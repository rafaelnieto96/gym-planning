{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./exercise.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./weekly-calendar/weekly-calendar.component\";\nexport class AppComponent {\n  constructor(exerciseService) {\n    this.exerciseService = exerciseService;\n    this.selectedDay = '';\n    this.selectedExercise = '';\n    this.exerciseDetails = null;\n    this.getExercises();\n  }\n  closeExamplePopup() {\n    const examplePopup = document.getElementById('examplePopup');\n    if (examplePopup) {\n      examplePopup.style.display = 'none';\n    }\n  }\n  openExamplePopup(day) {\n    this.selectedDay = day;\n    const examplePopup = document.getElementById('examplePopup');\n    if (examplePopup) {\n      examplePopup.style.display = 'block';\n    }\n  }\n  createExercise() {\n    console.log('event:', event);\n    const exerciseData = {\n      name: document.getElementById('exerciseName').value,\n      repetitions: parseInt(document.getElementById('exerciseRepetitions').value, 10),\n      weight: parseFloat(document.getElementById('exerciseWeight').value),\n      machine: document.getElementById('exerciseMachine').value === 'true',\n      day: this.selectedDay\n    };\n    this.exerciseService.postExercise(exerciseData).subscribe(resp => {\n      console.log('Exercise created:', resp);\n      this.getExercises();\n      this.closeExamplePopup();\n    }, err => {\n      console.error('Error creating exercise:', err);\n    });\n  }\n  openEditExercisePopup(exercise) {\n    this.selectedExercise = exercise;\n    const examplePopup = document.getElementById('editExercisePopup');\n    if (examplePopup) {\n      examplePopup.style.display = 'block';\n    }\n  }\n  updateExercise() {\n    this.exerciseService.updateExercise(this.selectedExercise.id, this.selectedExercise).subscribe(resp => {\n      console.log('Exercise updated:', resp);\n      this.closeEditExercisePopup();\n    }, err => {\n      console.error('Error updating exercise:', err);\n    });\n  }\n  getExercises() {\n    this.exerciseService.getExercises().subscribe(resp => {\n      console.log('Exercises:', resp);\n      this.exerciseDetails = resp;\n    }, err => {\n      console.error('Error fetching exercises:', err);\n    });\n  }\n  closeEditExercisePopup() {\n    const editPopup = document.getElementById('editExercisePopup');\n    if (editPopup) {\n      editPopup.style.display = 'none';\n    }\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ExerciseService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 85,\n    vars: 6,\n    consts: [[\"role\", \"main\", 1, \"content\"], [3, \"exercises\", \"squareClicked\", \"exerciseClicked\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", \"id\", \"examplePopup\", 1, \"modal\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"exerciseName\"], [\"type\", \"text\", \"id\", \"exerciseName\", \"placeholder\", \"Exercise Name\", 1, \"form-control\"], [\"for\", \"exerciseSeries\"], [\"type\", \"number\", \"id\", \"exerciseSeries\", \"placeholder\", \"Series\", \"name\", \"exerciseSeries\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"exerciseRepetitions\"], [\"type\", \"number\", \"id\", \"exerciseRepetitions\", \"placeholder\", \"Repetitions\", 1, \"form-control\"], [\"for\", \"exerciseWeight\"], [\"type\", \"number\", \"id\", \"exerciseWeight\", \"placeholder\", \"Weight\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", \"id\", \"editExercisePopup\", 1, \"modal\"], [\"type\", \"text\", \"id\", \"exerciseName\", \"placeholder\", \"Exercise Name\", \"name\", \"exerciseName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"id\", \"exerciseRepetitions\", \"placeholder\", \"Repetitions\", \"name\", \"exerciseRepetitions\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"id\", \"exerciseWeight\", \"placeholder\", \"Weight\", \"name\", \"exerciseWeight\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"action\", \"javascript:void(0);\", 1, \"login-form\"], [1, \"form-input-material\"], [\"type\", \"text\", \"name\", \"exerciseName\", \"id\", \"exerciseName\", \"placeholder\", \" \", \"autocomplete\", \"off\", \"required\", \"\", 1, \"form-control-material\"], [\"type\", \"number\", \"name\", \"exerciseSeries\", \"id\", \"exerciseSeries\", \"placeholder\", \" \", \"autocomplete\", \"off\", \"required\", \"\", 1, \"form-control-material\"], [\"type\", \"number\", \"name\", \"exerciseRepetitions\", \"id\", \"exerciseRepetitions\", \"placeholder\", \" \", \"autocomplete\", \"off\", \"required\", \"\", 1, \"form-control-material\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"placeholder\", \" \", \"autocomplete\", \"off\", \"required\", \"\", 1, \"form-control-material\"], [\"for\", \"password\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-ghost\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"app-weekly-calendar\", 1);\n        i0.ɵɵlistener(\"squareClicked\", function AppComponent_Template_app_weekly_calendar_squareClicked_1_listener($event) {\n          return ctx.openExamplePopup($event);\n        })(\"exerciseClicked\", function AppComponent_Template_app_weekly_calendar_exerciseClicked_1_listener($event) {\n          return ctx.openEditExercisePopup($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h5\", 6);\n        i0.ɵɵtext(7, \"Create Exercise\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n          return ctx.closeExamplePopup();\n        });\n        i0.ɵɵelementStart(9, \"span\", 8);\n        i0.ɵɵtext(10, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"form\", 10);\n        i0.ɵɵlistener(\"submit\", function AppComponent_Template_form_submit_12_listener() {\n          return ctx.createExercise();\n        });\n        i0.ɵɵelementStart(13, \"div\", 11)(14, \"label\", 12);\n        i0.ɵɵtext(15, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 11)(18, \"label\", 14);\n        i0.ɵɵtext(19, \"Series\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.selectedExercise.series = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 11)(22, \"label\", 16);\n        i0.ɵɵtext(23, \"Repetitions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 11)(26, \"label\", 18);\n        i0.ɵɵtext(27, \"Weight\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 20);\n        i0.ɵɵtext(30, \"Create\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(31, \"div\", 21)(32, \"div\", 3)(33, \"div\", 4)(34, \"div\", 5)(35, \"h5\", 6);\n        i0.ɵɵtext(36, \"Edit Exercise\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_37_listener() {\n          return ctx.closeEditExercisePopup();\n        });\n        i0.ɵɵelementStart(38, \"span\", 8);\n        i0.ɵɵtext(39, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(40, \"div\", 9)(41, \"form\", 10);\n        i0.ɵɵlistener(\"submit\", function AppComponent_Template_form_submit_41_listener() {\n          return ctx.updateExercise();\n        });\n        i0.ɵɵelementStart(42, \"div\", 11)(43, \"label\", 12);\n        i0.ɵɵtext(44, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"input\", 22);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_45_listener($event) {\n          return ctx.selectedExercise.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"div\", 11)(47, \"label\", 14);\n        i0.ɵɵtext(48, \"Series\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_49_listener($event) {\n          return ctx.selectedExercise.series = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(50, \"div\", 11)(51, \"label\", 16);\n        i0.ɵɵtext(52, \"Repetitions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"input\", 23);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_53_listener($event) {\n          return ctx.selectedExercise.repetitions = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(54, \"div\", 11)(55, \"label\", 18);\n        i0.ɵɵtext(56, \"Weight\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"input\", 24);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_57_listener($event) {\n          return ctx.selectedExercise.weight = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(58, \"button\", 20);\n        i0.ɵɵtext(59, \"Confirm\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(60, \"form\", 25)(61, \"h1\");\n        i0.ɵɵtext(62, \"Edit Exercise\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"div\", 26);\n        i0.ɵɵelement(64, \"input\", 27);\n        i0.ɵɵelementStart(65, \"label\", 12);\n        i0.ɵɵtext(66, \"Name\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(67, \"div\", 26);\n        i0.ɵɵelement(68, \"input\", 28);\n        i0.ɵɵelementStart(69, \"label\", 14);\n        i0.ɵɵtext(70, \"Series\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(71, \"div\", 26);\n        i0.ɵɵelement(72, \"input\", 29);\n        i0.ɵɵelementStart(73, \"label\", 16);\n        i0.ɵɵtext(74, \"Repetitions\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(75, \"div\", 26);\n        i0.ɵɵelement(76, \"input\", 28);\n        i0.ɵɵelementStart(77, \"label\", 14);\n        i0.ɵɵtext(78, \"Weight\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(79, \"div\", 26);\n        i0.ɵɵelement(80, \"input\", 30);\n        i0.ɵɵelementStart(81, \"label\", 31);\n        i0.ɵɵtext(82, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(83, \"button\", 32);\n        i0.ɵɵtext(84, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"exercises\", ctx.exerciseDetails);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedExercise.series);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedExercise.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedExercise.series);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedExercise.repetitions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedExercise.weight);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm, i3.WeeklyCalendarComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","exerciseService","selectedDay","selectedExercise","exerciseDetails","getExercises","closeExamplePopup","examplePopup","document","getElementById","style","display","openExamplePopup","day","createExercise","console","log","event","exerciseData","name","value","repetitions","parseInt","weight","parseFloat","machine","postExercise","subscribe","resp","err","error","openEditExercisePopup","exercise","updateExercise","id","closeEditExercisePopup","editPopup","_","i0","ɵɵdirectiveInject","i1","ExerciseService","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_app_weekly_calendar_squareClicked_1_listener","$event","AppComponent_Template_app_weekly_calendar_exerciseClicked_1_listener","ɵɵelementEnd","ɵɵtext","AppComponent_Template_button_click_8_listener","AppComponent_Template_form_submit_12_listener","ɵɵelement","AppComponent_Template_input_ngModelChange_20_listener","series","AppComponent_Template_button_click_37_listener","AppComponent_Template_form_submit_41_listener","AppComponent_Template_input_ngModelChange_45_listener","AppComponent_Template_input_ngModelChange_49_listener","AppComponent_Template_input_ngModelChange_53_listener","AppComponent_Template_input_ngModelChange_57_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/rafa/Sites/Proyectos/gym-planning/src/app/app.component.ts","/Users/rafa/Sites/Proyectos/gym-planning/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ExerciseService } from './exercise.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    selectedDay: string = '';\n    selectedExercise: any = '';\n\n    exerciseDetails: any = null;\n\n    constructor(private exerciseService: ExerciseService) {\n        this.getExercises();\n    }\n\n    closeExamplePopup(): void {\n        const examplePopup = document.getElementById('examplePopup');\n        if (examplePopup) {\n            examplePopup.style.display = 'none';\n        }\n    }\n\n    openExamplePopup(day: string): void {\n        this.selectedDay = day;\n        const examplePopup = document.getElementById('examplePopup');\n        if (examplePopup) {\n            examplePopup.style.display = 'block';\n        }\n    }\n\n    createExercise(): void {\n        console.log('event:', event);\n        const exerciseData = {\n            name: (document.getElementById('exerciseName') as HTMLInputElement).value,\n            repetitions: parseInt((document.getElementById('exerciseRepetitions') as HTMLInputElement).value, 10),\n            weight: parseFloat((document.getElementById('exerciseWeight') as HTMLInputElement).value),\n            machine: (document.getElementById('exerciseMachine') as HTMLSelectElement).value === 'true',\n            day: this.selectedDay\n        };\n\n        this.exerciseService.postExercise(exerciseData).subscribe(\n            (resp) => {\n                console.log('Exercise created:', resp);\n                this.getExercises();\n                this.closeExamplePopup();\n            },\n            (err) => {\n                console.error('Error creating exercise:', err);\n            }\n        );\n    }\n\n    openEditExercisePopup(exercise: any): void {\n        this.selectedExercise = exercise;\n        const examplePopup = document.getElementById('editExercisePopup');\n        if (examplePopup) {\n            examplePopup.style.display = 'block';\n        }\n    }\n\n    updateExercise(): void {\n        this.exerciseService.updateExercise(this.selectedExercise.id, this.selectedExercise).subscribe(\n            (resp) => {\n                console.log('Exercise updated:', resp);\n                this.closeEditExercisePopup();\n            },\n            (err) => {\n                console.error('Error updating exercise:', err);\n            }\n        );\n    }\n\n    getExercises(): void {\n        this.exerciseService.getExercises().subscribe(\n            (resp) => {\n                console.log('Exercises:', resp);\n                this.exerciseDetails = resp;\n            },\n            (err) => {\n                console.error('Error fetching exercises:', err);\n            }\n        );\n    }\n\n    closeEditExercisePopup(): void {\n        const editPopup = document.getElementById('editExercisePopup');\n        if (editPopup) {\n            editPopup.style.display = 'none';\n        }\n    }\n\n}\n","<div class=\"content\" role=\"main\">\n    <app-weekly-calendar (squareClicked)=\"openExamplePopup($event)\" (exerciseClicked)=\"openEditExercisePopup($event)\"\n        [exercises]=\"exerciseDetails\"></app-weekly-calendar>\n</div>\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"examplePopup\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Create Exercise</h5>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeExamplePopup()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <!--ToDo:Change this-->\n                <form (submit)=\"createExercise()\">\n                    <div class=\"form-group\">\n                        <label for=\"exerciseName\">Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exerciseName\" placeholder=\"Exercise Name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseSeries\">Series</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseSeries\" placeholder=\"Series\"\n                            [(ngModel)]=\"selectedExercise.series\" name=\"exerciseSeries\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseRepetitions\">Repetitions</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseRepetitions\" placeholder=\"Repetitions\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseWeight\">Weight</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseWeight\" placeholder=\"Weight\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Create</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"editExercisePopup\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Edit Exercise</h5>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeEditExercisePopup()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"updateExercise()\">\n                    <div class=\"form-group\">\n                        <label for=\"exerciseName\">Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exerciseName\" placeholder=\"Exercise Name\"\n                            [(ngModel)]=\"selectedExercise.name\" name=\"exerciseName\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseSeries\">Series</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseSeries\" placeholder=\"Series\"\n                            [(ngModel)]=\"selectedExercise.series\" name=\"exerciseSeries\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseRepetitions\">Repetitions</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseRepetitions\" placeholder=\"Repetitions\"\n                            [(ngModel)]=\"selectedExercise.repetitions\" name=\"exerciseRepetitions\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseWeight\">Weight</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseWeight\" placeholder=\"Weight\"\n                            [(ngModel)]=\"selectedExercise.weight\" name=\"exerciseWeight\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Confirm</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<form class=\"login-form\" action=\"javascript:void(0);\">\n    <h1>Edit Exercise</h1>\n\n    <div class=\"form-input-material\">\n      <input type=\"text\" name=\"exerciseName\" id=\"exerciseName\" placeholder=\" \" autocomplete=\"off\" class=\"form-control-material\" required />\n      <label for=\"exerciseName\">Name</label>\n    </div>\n\n    <div class=\"form-input-material\">\n        <input type=\"number\" name=\"exerciseSeries\" id=\"exerciseSeries\" placeholder=\" \" autocomplete=\"off\" class=\"form-control-material\" required />\n        <label for=\"exerciseSeries\">Series</label>\n      </div>\n\n      <div class=\"form-input-material\">\n        <input type=\"number\" name=\"exerciseRepetitions\" id=\"exerciseRepetitions\" placeholder=\" \" autocomplete=\"off\" class=\"form-control-material\" required />\n        <label for=\"exerciseRepetitions\">Repetitions</label>\n      </div>\n\n      <div class=\"form-input-material\">\n        <input type=\"number\" name=\"exerciseSeries\" id=\"exerciseSeries\" placeholder=\" \" autocomplete=\"off\" class=\"form-control-material\" required />\n        <label for=\"exerciseSeries\">Weight</label>\n      </div>\n    <div class=\"form-input-material\">\n      <input type=\"password\" name=\"password\" id=\"password\" placeholder=\" \" autocomplete=\"off\" class=\"form-control-material\" required />\n      <label for=\"password\">Password</label>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-ghost\">Login</button>\n  </form>"],"mappings":";;;;AAQA,OAAM,MAAOA,YAAY;EAMrBC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IALnC,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,gBAAgB,GAAQ,EAAE;IAE1B,KAAAC,eAAe,GAAQ,IAAI;IAGvB,IAAI,CAACC,YAAY,EAAE;EACvB;EAEAC,iBAAiBA,CAAA;IACb,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAC5D,IAAIF,YAAY,EAAE;MACdA,YAAY,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;;EAE3C;EAEAC,gBAAgBA,CAACC,GAAW;IACxB,IAAI,CAACX,WAAW,GAAGW,GAAG;IACtB,MAAMN,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAC5D,IAAIF,YAAY,EAAE;MACdA,YAAY,CAACG,KAAK,CAACC,OAAO,GAAG,OAAO;;EAE5C;EAEAG,cAAcA,CAAA;IACVC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,KAAK,CAAC;IAC5B,MAAMC,YAAY,GAAG;MACjBC,IAAI,EAAGX,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAsB,CAACW,KAAK;MACzEC,WAAW,EAAEC,QAAQ,CAAEd,QAAQ,CAACC,cAAc,CAAC,qBAAqB,CAAsB,CAACW,KAAK,EAAE,EAAE,CAAC;MACrGG,MAAM,EAAEC,UAAU,CAAEhB,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAsB,CAACW,KAAK,CAAC;MACzFK,OAAO,EAAGjB,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAuB,CAACW,KAAK,KAAK,MAAM;MAC3FP,GAAG,EAAE,IAAI,CAACX;KACb;IAED,IAAI,CAACD,eAAe,CAACyB,YAAY,CAACR,YAAY,CAAC,CAACS,SAAS,CACpDC,IAAI,IAAI;MACLb,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEY,IAAI,CAAC;MACtC,IAAI,CAACvB,YAAY,EAAE;MACnB,IAAI,CAACC,iBAAiB,EAAE;IAC5B,CAAC,EACAuB,GAAG,IAAI;MACJd,OAAO,CAACe,KAAK,CAAC,0BAA0B,EAAED,GAAG,CAAC;IAClD,CAAC,CACJ;EACL;EAEAE,qBAAqBA,CAACC,QAAa;IAC/B,IAAI,CAAC7B,gBAAgB,GAAG6B,QAAQ;IAChC,MAAMzB,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC;IACjE,IAAIF,YAAY,EAAE;MACdA,YAAY,CAACG,KAAK,CAACC,OAAO,GAAG,OAAO;;EAE5C;EAEAsB,cAAcA,CAAA;IACV,IAAI,CAAChC,eAAe,CAACgC,cAAc,CAAC,IAAI,CAAC9B,gBAAgB,CAAC+B,EAAE,EAAE,IAAI,CAAC/B,gBAAgB,CAAC,CAACwB,SAAS,CACzFC,IAAI,IAAI;MACLb,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEY,IAAI,CAAC;MACtC,IAAI,CAACO,sBAAsB,EAAE;IACjC,CAAC,EACAN,GAAG,IAAI;MACJd,OAAO,CAACe,KAAK,CAAC,0BAA0B,EAAED,GAAG,CAAC;IAClD,CAAC,CACJ;EACL;EAEAxB,YAAYA,CAAA;IACR,IAAI,CAACJ,eAAe,CAACI,YAAY,EAAE,CAACsB,SAAS,CACxCC,IAAI,IAAI;MACLb,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEY,IAAI,CAAC;MAC/B,IAAI,CAACxB,eAAe,GAAGwB,IAAI;IAC/B,CAAC,EACAC,GAAG,IAAI;MACJd,OAAO,CAACe,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC;IACnD,CAAC,CACJ;EACL;EAEAM,sBAAsBA,CAAA;IAClB,MAAMC,SAAS,GAAG5B,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC;IAC9D,IAAI2B,SAAS,EAAE;MACXA,SAAS,CAAC1B,KAAK,CAACC,OAAO,GAAG,MAAM;;EAExC;EAAC,QAAA0B,CAAA,G;qBApFQtC,YAAY,EAAAuC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZ3C,YAAY;IAAA4C,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRzBX,EAAA,CAAAa,cAAA,aAAiC;QACRb,EAAA,CAAAc,UAAA,2BAAAC,mEAAAC,MAAA;UAAA,OAAiBJ,GAAA,CAAAtC,gBAAA,CAAA0C,MAAA,CAAwB;QAAA,EAAC,6BAAAC,qEAAAD,MAAA;UAAA,OAAoBJ,GAAA,CAAAnB,qBAAA,CAAAuB,MAAA,CAA6B;QAAA,EAAjD;QAC7BhB,EAAA,CAAAkB,YAAA,EAAsB;QAG5DlB,EAAA,CAAAa,cAAA,aAAiE;QAIzBb,EAAA,CAAAmB,MAAA,sBAAe;QAAAnB,EAAA,CAAAkB,YAAA,EAAK;QAC5ClB,EAAA,CAAAa,cAAA,gBAAqF;QAA9Bb,EAAA,CAAAc,UAAA,mBAAAM,8CAAA;UAAA,OAASR,GAAA,CAAA5C,iBAAA,EAAmB;QAAA,EAAC;QAChFgC,EAAA,CAAAa,cAAA,cAAyB;QAAAb,EAAA,CAAAmB,MAAA,cAAO;QAAAnB,EAAA,CAAAkB,YAAA,EAAO;QAG/ClB,EAAA,CAAAa,cAAA,cAAwB;QAEdb,EAAA,CAAAc,UAAA,oBAAAO,8CAAA;UAAA,OAAUT,GAAA,CAAApC,cAAA,EAAgB;QAAA,EAAC;QAC7BwB,EAAA,CAAAa,cAAA,eAAwB;QACMb,EAAA,CAAAmB,MAAA,YAAI;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QACtClB,EAAA,CAAAsB,SAAA,iBAAsF;QAC1FtB,EAAA,CAAAkB,YAAA,EAAM;QACNlB,EAAA,CAAAa,cAAA,eAAwB;QACQb,EAAA,CAAAmB,MAAA,cAAM;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QAC1ClB,EAAA,CAAAa,cAAA,iBACgE;QAA5Db,EAAA,CAAAc,UAAA,2BAAAS,sDAAAP,MAAA;UAAA,OAAAJ,GAAA,CAAA/C,gBAAA,CAAA2D,MAAA,GAAAR,MAAA;QAAA,EAAqC;QADzChB,EAAA,CAAAkB,YAAA,EACgE;QAEpElB,EAAA,CAAAa,cAAA,eAAwB;QACab,EAAA,CAAAmB,MAAA,mBAAW;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QACpDlB,EAAA,CAAAsB,SAAA,iBAA6F;QACjGtB,EAAA,CAAAkB,YAAA,EAAM;QACNlB,EAAA,CAAAa,cAAA,eAAwB;QACQb,EAAA,CAAAmB,MAAA,cAAM;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QAC1ClB,EAAA,CAAAsB,SAAA,iBAAmF;QACvFtB,EAAA,CAAAkB,YAAA,EAAM;QACNlB,EAAA,CAAAa,cAAA,kBAA8C;QAAAb,EAAA,CAAAmB,MAAA,cAAM;QAAAnB,EAAA,CAAAkB,YAAA,EAAS;QAMjFlB,EAAA,CAAAa,cAAA,eAAsE;QAI9Bb,EAAA,CAAAmB,MAAA,qBAAa;QAAAnB,EAAA,CAAAkB,YAAA,EAAK;QAC1ClB,EAAA,CAAAa,cAAA,iBAA0F;QAAnCb,EAAA,CAAAc,UAAA,mBAAAW,+CAAA;UAAA,OAASb,GAAA,CAAAf,sBAAA,EAAwB;QAAA,EAAC;QACrFG,EAAA,CAAAa,cAAA,eAAyB;QAAAb,EAAA,CAAAmB,MAAA,cAAO;QAAAnB,EAAA,CAAAkB,YAAA,EAAO;QAG/ClB,EAAA,CAAAa,cAAA,cAAwB;QACdb,EAAA,CAAAc,UAAA,oBAAAY,8CAAA;UAAA,OAAUd,GAAA,CAAAjB,cAAA,EAAgB;QAAA,EAAC;QAC7BK,EAAA,CAAAa,cAAA,eAAwB;QACMb,EAAA,CAAAmB,MAAA,YAAI;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QACtClB,EAAA,CAAAa,cAAA,iBAC4D;QAAxDb,EAAA,CAAAc,UAAA,2BAAAa,sDAAAX,MAAA;UAAA,OAAAJ,GAAA,CAAA/C,gBAAA,CAAAgB,IAAA,GAAAmC,MAAA;QAAA,EAAmC;QADvChB,EAAA,CAAAkB,YAAA,EAC4D;QAEhElB,EAAA,CAAAa,cAAA,eAAwB;QACQb,EAAA,CAAAmB,MAAA,cAAM;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QAC1ClB,EAAA,CAAAa,cAAA,iBACgE;QAA5Db,EAAA,CAAAc,UAAA,2BAAAc,sDAAAZ,MAAA;UAAA,OAAAJ,GAAA,CAAA/C,gBAAA,CAAA2D,MAAA,GAAAR,MAAA;QAAA,EAAqC;QADzChB,EAAA,CAAAkB,YAAA,EACgE;QAEpElB,EAAA,CAAAa,cAAA,eAAwB;QACab,EAAA,CAAAmB,MAAA,mBAAW;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QACpDlB,EAAA,CAAAa,cAAA,iBAC0E;QAAtEb,EAAA,CAAAc,UAAA,2BAAAe,sDAAAb,MAAA;UAAA,OAAAJ,GAAA,CAAA/C,gBAAA,CAAAkB,WAAA,GAAAiC,MAAA;QAAA,EAA0C;QAD9ChB,EAAA,CAAAkB,YAAA,EAC0E;QAE9ElB,EAAA,CAAAa,cAAA,eAAwB;QACQb,EAAA,CAAAmB,MAAA,cAAM;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QAC1ClB,EAAA,CAAAa,cAAA,iBACgE;QAA5Db,EAAA,CAAAc,UAAA,2BAAAgB,sDAAAd,MAAA;UAAA,OAAAJ,GAAA,CAAA/C,gBAAA,CAAAoB,MAAA,GAAA+B,MAAA;QAAA,EAAqC;QADzChB,EAAA,CAAAkB,YAAA,EACgE;QAEpElB,EAAA,CAAAa,cAAA,kBAA8C;QAAAb,EAAA,CAAAmB,MAAA,eAAO;QAAAnB,EAAA,CAAAkB,YAAA,EAAS;QAQlFlB,EAAA,CAAAa,cAAA,gBAAsD;QAC9Cb,EAAA,CAAAmB,MAAA,qBAAa;QAAAnB,EAAA,CAAAkB,YAAA,EAAK;QAEtBlB,EAAA,CAAAa,cAAA,eAAiC;QAC/Bb,EAAA,CAAAsB,SAAA,iBAAqI;QACrItB,EAAA,CAAAa,cAAA,iBAA0B;QAAAb,EAAA,CAAAmB,MAAA,YAAI;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QAGxClB,EAAA,CAAAa,cAAA,eAAiC;QAC7Bb,EAAA,CAAAsB,SAAA,iBAA2I;QAC3ItB,EAAA,CAAAa,cAAA,iBAA4B;QAAAb,EAAA,CAAAmB,MAAA,cAAM;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QAG5ClB,EAAA,CAAAa,cAAA,eAAiC;QAC/Bb,EAAA,CAAAsB,SAAA,iBAAqJ;QACrJtB,EAAA,CAAAa,cAAA,iBAAiC;QAAAb,EAAA,CAAAmB,MAAA,mBAAW;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QAGtDlB,EAAA,CAAAa,cAAA,eAAiC;QAC/Bb,EAAA,CAAAsB,SAAA,iBAA2I;QAC3ItB,EAAA,CAAAa,cAAA,iBAA4B;QAAAb,EAAA,CAAAmB,MAAA,cAAM;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QAE9ClB,EAAA,CAAAa,cAAA,eAAiC;QAC/Bb,EAAA,CAAAsB,SAAA,iBAAiI;QACjItB,EAAA,CAAAa,cAAA,iBAAsB;QAAAb,EAAA,CAAAmB,MAAA,gBAAQ;QAAAnB,EAAA,CAAAkB,YAAA,EAAQ;QAExClB,EAAA,CAAAa,cAAA,kBAAwD;QAAAb,EAAA,CAAAmB,MAAA,aAAK;QAAAnB,EAAA,CAAAkB,YAAA,EAAS;;;QAvGlElB,EAAA,CAAA+B,SAAA,GAA6B;QAA7B/B,EAAA,CAAAgC,UAAA,cAAApB,GAAA,CAAA9C,eAAA,CAA6B;QAsBTkC,EAAA,CAAA+B,SAAA,IAAqC;QAArC/B,EAAA,CAAAgC,UAAA,YAAApB,GAAA,CAAA/C,gBAAA,CAAA2D,MAAA,CAAqC;QA8BrCxB,EAAA,CAAA+B,SAAA,IAAmC;QAAnC/B,EAAA,CAAAgC,UAAA,YAAApB,GAAA,CAAA/C,gBAAA,CAAAgB,IAAA,CAAmC;QAKnCmB,EAAA,CAAA+B,SAAA,GAAqC;QAArC/B,EAAA,CAAAgC,UAAA,YAAApB,GAAA,CAAA/C,gBAAA,CAAA2D,MAAA,CAAqC;QAKrCxB,EAAA,CAAA+B,SAAA,GAA0C;QAA1C/B,EAAA,CAAAgC,UAAA,YAAApB,GAAA,CAAA/C,gBAAA,CAAAkB,WAAA,CAA0C;QAK1CiB,EAAA,CAAA+B,SAAA,GAAqC;QAArC/B,EAAA,CAAAgC,UAAA,YAAApB,GAAA,CAAA/C,gBAAA,CAAAoB,MAAA,CAAqC"},"metadata":{},"sourceType":"module","externalDependencies":[]}