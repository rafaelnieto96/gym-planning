{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./weekly-calendar/weekly-calendar.component\";\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  createExercise(exerciseData) {\n    // Replace 'exerciseEndpoint' with your actual API endpoint URL\n    const exerciseEndpoint = 'https://your-api-url.com/api/exercises';\n    // Use HttpClient to make a POST request with the exercise data\n    this.http.post(exerciseEndpoint, exerciseData).subscribe(response => {\n      console.log('Exercise created:', response);\n      // Handle success, update UI, etc.\n    }, error => {\n      console.error('Error creating exercise:', error);\n      // Handle error, display error message, etc.\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 35,\n    vars: 0,\n    consts: [[\"role\", \"main\", 1, \"content\"], [3, \"squareClicked\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", \"id\", \"examplePopup\", 1, \"modal\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\"], [\"for\", \"exerciseName\"], [\"type\", \"text\", \"id\", \"exerciseName\", \"placeholder\", \"Exercise Name\", 1, \"form-control\"], [\"for\", \"exerciseRepetitions\"], [\"type\", \"number\", \"id\", \"exerciseRepetitions\", \"placeholder\", \"Repetitions\", 1, \"form-control\"], [\"for\", \"exerciseWeight\"], [\"type\", \"number\", \"id\", \"exerciseWeight\", \"placeholder\", \"Weight\", 1, \"form-control\"], [\"for\", \"exerciseMachine\"], [\"id\", \"exerciseMachine\", 1, \"form-control\"], [\"value\", \"true\"], [\"value\", \"false\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"app-weekly-calendar\", 1);\n        i0.ɵɵlistener(\"squareClicked\", function AppComponent_Template_app_weekly_calendar_squareClicked_1_listener() {\n          return ctx.openExamplePopup();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h5\", 6);\n        i0.ɵɵtext(7, \"Create Exercise\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 7)(9, \"span\", 8);\n        i0.ɵɵtext(10, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"form\")(13, \"div\", 10)(14, \"label\", 11);\n        i0.ɵɵtext(15, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 10)(18, \"label\", 13);\n        i0.ɵɵtext(19, \"Repetitions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 10)(22, \"label\", 15);\n        i0.ɵɵtext(23, \"Weight\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 10)(26, \"label\", 17);\n        i0.ɵɵtext(27, \"Machine\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"select\", 18)(29, \"option\", 19);\n        i0.ɵɵtext(30, \"Yes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 20);\n        i0.ɵɵtext(32, \"No\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"button\", 21);\n        i0.ɵɵtext(34, \"Create\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.NgControlStatusGroup, i2.NgForm, i3.WeeklyCalendarComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","http","createExercise","exerciseData","exerciseEndpoint","post","subscribe","response","console","log","error","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_app_weekly_calendar_squareClicked_1_listener","openExamplePopup","ɵɵelementEnd","ɵɵtext","ɵɵelement"],"sources":["/Users/rafa/Sites/Proyectos/gym-planning/src/app/app.component.ts","/Users/rafa/Sites/Proyectos/gym-planning/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private http: HttpClient) {}\n\n  createExercise(exerciseData: any) {\n    // Replace 'exerciseEndpoint' with your actual API endpoint URL\n    const exerciseEndpoint = 'https://your-api-url.com/api/exercises';\n    \n    // Use HttpClient to make a POST request with the exercise data\n    this.http.post(exerciseEndpoint, exerciseData)\n      .subscribe((response) => {\n        console.log('Exercise created:', response);\n        // Handle success, update UI, etc.\n      }, (error) => {\n        console.error('Error creating exercise:', error);\n        // Handle error, display error message, etc.\n      });\n  }\n}\n","<div class=\"content\" role=\"main\">\n    <app-weekly-calendar (squareClicked)=\"openExamplePopup()\"></app-weekly-calendar>\n</div>\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"examplePopup\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Create Exercise</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <form>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseName\">Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exerciseName\" placeholder=\"Exercise Name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseRepetitions\">Repetitions</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseRepetitions\" placeholder=\"Repetitions\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseWeight\">Weight</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseWeight\" placeholder=\"Weight\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseMachine\">Machine</label>\n                        <select class=\"form-control\" id=\"exerciseMachine\">\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                        </select>\n                    </div>\n                    <!-- You might want to add validation, additional fields, or UI elements based on your requirements -->\n                    <button type=\"submit\" class=\"btn btn-primary\">Create</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":";;;;AAQA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,cAAcA,CAACC,YAAiB;IAC9B;IACA,MAAMC,gBAAgB,GAAG,wCAAwC;IAEjE;IACA,IAAI,CAACH,IAAI,CAACI,IAAI,CAACD,gBAAgB,EAAED,YAAY,CAAC,CAC3CG,SAAS,CAAEC,QAAQ,IAAI;MACtBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;MAC1C;IACF,CAAC,EAAGG,KAAK,IAAI;MACXF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBAjBUZ,YAAY,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZjB,YAAY;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRzBX,EAAA,CAAAa,cAAA,aAAiC;QACRb,EAAA,CAAAc,UAAA,2BAAAC,mEAAA;UAAA,OAAiBH,GAAA,CAAAI,gBAAA,EAAkB;QAAA,EAAC;QAAChB,EAAA,CAAAiB,YAAA,EAAsB;QAGpFjB,EAAA,CAAAa,cAAA,aAAiE;QAIzBb,EAAA,CAAAkB,MAAA,sBAAe;QAAAlB,EAAA,CAAAiB,YAAA,EAAK;QAC5CjB,EAAA,CAAAa,cAAA,gBAA4E;QAC/Cb,EAAA,CAAAkB,MAAA,cAAO;QAAAlB,EAAA,CAAAiB,YAAA,EAAO;QAG/CjB,EAAA,CAAAa,cAAA,cAAwB;QAGcb,EAAA,CAAAkB,MAAA,YAAI;QAAAlB,EAAA,CAAAiB,YAAA,EAAQ;QACtCjB,EAAA,CAAAmB,SAAA,iBAAsF;QAC1FnB,EAAA,CAAAiB,YAAA,EAAM;QACNjB,EAAA,CAAAa,cAAA,eAAwB;QACab,EAAA,CAAAkB,MAAA,mBAAW;QAAAlB,EAAA,CAAAiB,YAAA,EAAQ;QACpDjB,EAAA,CAAAmB,SAAA,iBAA6F;QACjGnB,EAAA,CAAAiB,YAAA,EAAM;QACNjB,EAAA,CAAAa,cAAA,eAAwB;QACQb,EAAA,CAAAkB,MAAA,cAAM;QAAAlB,EAAA,CAAAiB,YAAA,EAAQ;QAC1CjB,EAAA,CAAAmB,SAAA,iBAAmF;QACvFnB,EAAA,CAAAiB,YAAA,EAAM;QACNjB,EAAA,CAAAa,cAAA,eAAwB;QACSb,EAAA,CAAAkB,MAAA,eAAO;QAAAlB,EAAA,CAAAiB,YAAA,EAAQ;QAC5CjB,EAAA,CAAAa,cAAA,kBAAkD;QACzBb,EAAA,CAAAkB,MAAA,WAAG;QAAAlB,EAAA,CAAAiB,YAAA,EAAS;QACjCjB,EAAA,CAAAa,cAAA,kBAAsB;QAAAb,EAAA,CAAAkB,MAAA,UAAE;QAAAlB,EAAA,CAAAiB,YAAA,EAAS;QAIzCjB,EAAA,CAAAa,cAAA,kBAA8C;QAAAb,EAAA,CAAAkB,MAAA,cAAM;QAAAlB,EAAA,CAAAiB,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}