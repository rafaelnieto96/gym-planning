{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./exercise.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./weekly-calendar/weekly-calendar.component\";\nexport class AppComponent {\n  constructor(exerciseService) {\n    this.exerciseService = exerciseService;\n    this.exerciseDetails = null;\n    this.exerciseToUpdate = {\n      id: '',\n      name: '',\n      weight: '',\n      repetitions: '',\n      machine: ''\n    };\n    this.getExercises();\n  }\n  // Function to close the modal\n  closeExamplePopup() {\n    const examplePopup = document.getElementById('examplePopup');\n    if (examplePopup) {\n      examplePopup.style.display = 'none';\n    }\n  }\n  // Function to open the modal\n  openExamplePopup() {\n    const examplePopup = document.getElementById('examplePopup');\n    if (examplePopup) {\n      examplePopup.style.display = 'block';\n    }\n  }\n  // Function triggered on square click\n  // Function to handle form submission (creating an exercise)\n  createExercise(event) {\n    console.log('event:', event);\n    const exerciseData = {\n      name: document.getElementById('exerciseName').value,\n      repetitions: parseInt(document.getElementById('exerciseRepetitions').value, 10),\n      weight: parseFloat(document.getElementById('exerciseWeight').value),\n      machine: document.getElementById('exerciseMachine').value === 'true'\n    };\n    this.exerciseService.postExercise(exerciseData).subscribe(resp => {\n      console.log('Exercise created:', resp);\n      this.getExercises(); // Update the exercise list after a successful creation\n      this.closeExamplePopup(); // Close the modal after creating the exercise\n    }, err => {\n      console.error('Error creating exercise:', err);\n    });\n  }\n  // Function to retrieve all exercises\n  getExercises() {\n    this.exerciseService.getExercises().subscribe(resp => {\n      console.log('Exercises:', resp);\n      this.exerciseDetails = resp;\n    }, err => {\n      console.error('Error fetching exercises:', err);\n    });\n  }\n  // Function to delete an exercise\n  deleteExercise(exercise) {\n    this.exerciseService.deleteExercise(exercise.id).subscribe(() => {\n      console.log('Exercise deleted');\n      this.getExercises(); // Refresh the exercise list after deletion\n    }, err => {\n      console.error('Error deleting exercise:', err);\n    });\n  }\n  edit(exercise) {\n    this.exerciseToUpdate = exercise;\n  }\n  updateExercise() {\n    this.exerciseService.updateExercise(this.exerciseToUpdate.id, this.exerciseToUpdate).subscribe(resp => {\n      console.log('Exercise updated:', resp);\n    }, err => {\n      console.error('Error updating exercise:', err);\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ExerciseService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 36,\n    vars: 2,\n    consts: [[\"role\", \"main\", 1, \"content\"], [3, \"exercises\", \"squareClicked\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", \"id\", \"examplePopup\", 1, \"modal\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"exerciseName\"], [\"type\", \"text\", \"id\", \"exerciseName\", \"placeholder\", \"Exercise Name\", 1, \"form-control\"], [\"for\", \"exerciseRepetitions\"], [\"type\", \"number\", \"id\", \"exerciseRepetitions\", \"placeholder\", \"Repetitions\", 1, \"form-control\"], [\"for\", \"exerciseWeight\"], [\"type\", \"number\", \"id\", \"exerciseWeight\", \"placeholder\", \"Weight\", 1, \"form-control\"], [\"for\", \"exerciseMachine\"], [\"id\", \"exerciseMachine\", 1, \"form-control\"], [\"value\", \"true\"], [\"value\", \"false\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"app-weekly-calendar\", 1);\n        i0.ɵɵlistener(\"squareClicked\", function AppComponent_Template_app_weekly_calendar_squareClicked_1_listener($event) {\n          return ctx.createExercise($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"app-weekly-calendar\", 1);\n        i0.ɵɵlistener(\"squareClicked\", function AppComponent_Template_app_weekly_calendar_squareClicked_2_listener($event) {\n          return ctx.openExamplePopup($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"h5\", 6);\n        i0.ɵɵtext(8, \"Create Exercise\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_9_listener() {\n          return ctx.closeExamplePopup();\n        });\n        i0.ɵɵelementStart(10, \"span\", 8);\n        i0.ɵɵtext(11, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 9)(13, \"form\", 10);\n        i0.ɵɵlistener(\"submit\", function AppComponent_Template_form_submit_13_listener($event) {\n          return ctx.createExercise($event);\n        });\n        i0.ɵɵelementStart(14, \"div\", 11)(15, \"label\", 12);\n        i0.ɵɵtext(16, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"label\", 14);\n        i0.ɵɵtext(20, \"Repetitions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 11)(23, \"label\", 16);\n        i0.ɵɵtext(24, \"Weight\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 11)(27, \"label\", 18);\n        i0.ɵɵtext(28, \"Machine\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"select\", 19)(30, \"option\", 20);\n        i0.ɵɵtext(31, \"Yes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"option\", 21);\n        i0.ɵɵtext(33, \"No\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(34, \"button\", 22);\n        i0.ɵɵtext(35, \"Create\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"exercises\", ctx.exerciseDetails);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"exercises\", ctx.exerciseDetails);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.NgControlStatusGroup, i2.NgForm, i3.WeeklyCalendarComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","exerciseService","exerciseDetails","exerciseToUpdate","id","name","weight","repetitions","machine","getExercises","closeExamplePopup","examplePopup","document","getElementById","style","display","openExamplePopup","createExercise","event","console","log","exerciseData","value","parseInt","parseFloat","postExercise","subscribe","resp","err","error","deleteExercise","exercise","edit","updateExercise","_","i0","ɵɵdirectiveInject","i1","ExerciseService","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_app_weekly_calendar_squareClicked_1_listener","$event","ɵɵelementEnd","AppComponent_Template_app_weekly_calendar_squareClicked_2_listener","ɵɵtext","AppComponent_Template_button_click_9_listener","AppComponent_Template_form_submit_13_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/Users/rafa/Sites/Proyectos/gym-planning/src/app/app.component.ts","/Users/rafa/Sites/Proyectos/gym-planning/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ExerciseService } from './exercise.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  exerciseDetails: any = null;\n  exerciseToUpdate = {\n    id: '',\n    name: '',\n    weight: '',\n    repetitions: '',\n    machine: ''\n  };\n\n  constructor(private exerciseService: ExerciseService) {\n    this.getExercises();\n  }\n\n  // Function to close the modal\n  closeExamplePopup(): void {\n    const examplePopup = document.getElementById('examplePopup');\n    if (examplePopup) {\n      examplePopup.style.display = 'none';\n    }\n  }\n\n  // Function to open the modal\n  openExamplePopup(): void {\n    const examplePopup = document.getElementById('examplePopup');\n    if (examplePopup) {\n      examplePopup.style.display = 'block';\n    }\n  }\n\n  // Function triggered on square click\n\n\n  // Function to handle form submission (creating an exercise)\n  createExercise(event: Event): void {\n    console.log('event:', event);\n    const exerciseData = {\n      name: (document.getElementById('exerciseName') as HTMLInputElement).value,\n      repetitions: parseInt((document.getElementById('exerciseRepetitions') as HTMLInputElement).value, 10),\n      weight: parseFloat((document.getElementById('exerciseWeight') as HTMLInputElement).value),\n      machine: (document.getElementById('exerciseMachine') as HTMLSelectElement).value === 'true'\n    };\n\n    this.exerciseService.postExercise(exerciseData).subscribe(\n      (resp) => {\n        console.log('Exercise created:', resp);\n        this.getExercises(); // Update the exercise list after a successful creation\n        this.closeExamplePopup(); // Close the modal after creating the exercise\n      },\n      (err) => {\n        console.error('Error creating exercise:', err);\n      }\n    );\n  }\n\n  // Function to retrieve all exercises\n  getExercises(): void {\n    this.exerciseService.getExercises().subscribe(\n      (resp) => {\n        console.log('Exercises:', resp);\n        this.exerciseDetails = resp;\n      },\n      (err) => {\n        console.error('Error fetching exercises:', err);\n      }\n    );\n  }\n\n  // Function to delete an exercise\n  deleteExercise(exercise: any): void {\n    this.exerciseService.deleteExercise(exercise.id).subscribe(\n      () => {\n        console.log('Exercise deleted');\n        this.getExercises(); // Refresh the exercise list after deletion\n      },\n      (err) => {\n        console.error('Error deleting exercise:', err);\n      }\n    );\n  }\n\n  edit(exercise: any): void {\n    this.exerciseToUpdate = exercise;\n  }\n\n  updateExercise(): void {\n    this.exerciseService.updateExercise(this.exerciseToUpdate.id, this.exerciseToUpdate).subscribe(\n      (resp) => {\n        console.log('Exercise updated:', resp);\n      },\n      (err) => {\n        console.error('Error updating exercise:', err);\n      }\n    );\n  }\n\n\n\n\n}\n","<div class=\"content\" role=\"main\">\n    <app-weekly-calendar (squareClicked)=\"createExercise($event)\" [exercises]=\"exerciseDetails\"></app-weekly-calendar>\n    <app-weekly-calendar (squareClicked)=\"openExamplePopup($event)\" [exercises]=\"exerciseDetails\"></app-weekly-calendar>\n</div>\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"examplePopup\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Create Exercise</h5>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeExamplePopup()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"createExercise($event)\">\n                    <div class=\"form-group\">\n                        <label for=\"exerciseName\">Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exerciseName\" placeholder=\"Exercise Name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseRepetitions\">Repetitions</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseRepetitions\" placeholder=\"Repetitions\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseWeight\">Weight</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseWeight\" placeholder=\"Weight\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseMachine\">Machine</label>\n                        <select class=\"form-control\" id=\"exerciseMachine\">\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                        </select>\n                    </div>\n                    <!-- You might want to add validation, additional fields, or UI elements based on your requirements -->\n                    <button type=\"submit\" class=\"btn btn-primary\">Create</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}