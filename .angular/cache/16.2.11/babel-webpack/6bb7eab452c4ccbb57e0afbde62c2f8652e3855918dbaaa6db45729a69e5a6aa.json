{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./exercise.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./weekly-calendar/weekly-calendar.component\";\nexport class AppComponent {\n  constructor(exerciseService, fb) {\n    this.exerciseService = exerciseService;\n    this.fb = fb;\n    this.exercises = [];\n    this.createForm();\n  }\n  ngOnInit() {\n    this.getExercises();\n  }\n  createForm() {\n    this.exerciseForm = this.fb.group({\n      name: ['', Validators.required],\n      repetitions: [0, Validators.required],\n      weight: [0, Validators.required],\n      machine: [false, Validators.required]\n    });\n  }\n  getExercises() {\n    this.exerciseService.getExercises().subscribe(exercises => {\n      this.exercises = exercises;\n    }, error => {\n      console.error('Error fetching exercises:', error);\n    });\n  }\n  createExercise() {\n    if (this.exerciseForm.valid) {\n      this.exerciseService.postExercise(this.exerciseForm.value).subscribe(resp => {\n        console.log('Exercise created:', resp);\n        this.getExercises();\n      }, err => {\n        console.error('Error creating exercise:', err);\n      });\n    }\n  }\n  deleteExercise(id) {\n    this.exerciseService.deleteExercise(id).subscribe(resp => {\n      console.log('Exercise deleted:', resp);\n      this.getExercises();\n    }, err => {\n      console.error('Error deleting exercise:', err);\n    });\n  }\n  updateExercise() {\n    const exerciseId = this.exerciseToUpdate.id;\n    this.exerciseService.updateExercise(exerciseId, this.exerciseToUpdate).subscribe(resp => {\n      console.log('Exercise updated:', resp);\n      this.getExercises();\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ExerciseService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 35,\n    vars: 0,\n    consts: [[\"role\", \"main\", 1, \"content\"], [3, \"squareClicked\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", \"id\", \"examplePopup\", 1, \"modal\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"exerciseName\"], [\"type\", \"text\", \"id\", \"exerciseName\", \"placeholder\", \"Exercise Name\", 1, \"form-control\"], [\"for\", \"exerciseRepetitions\"], [\"type\", \"number\", \"id\", \"exerciseRepetitions\", \"placeholder\", \"Repetitions\", 1, \"form-control\"], [\"for\", \"exerciseWeight\"], [\"type\", \"number\", \"id\", \"exerciseWeight\", \"placeholder\", \"Weight\", 1, \"form-control\"], [\"for\", \"exerciseMachine\"], [\"id\", \"exerciseMachine\", 1, \"form-control\"], [\"value\", \"true\"], [\"value\", \"false\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"app-weekly-calendar\", 1);\n        i0.ɵɵlistener(\"squareClicked\", function AppComponent_Template_app_weekly_calendar_squareClicked_1_listener() {\n          return ctx.openExamplePopup();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h5\", 6);\n        i0.ɵɵtext(7, \"Create Exercise\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n          return ctx.closeExamplePopup();\n        });\n        i0.ɵɵelementStart(9, \"span\", 8);\n        i0.ɵɵtext(10, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"form\", 10);\n        i0.ɵɵlistener(\"submit\", function AppComponent_Template_form_submit_12_listener($event) {\n          return ctx.createExercise($event);\n        });\n        i0.ɵɵelementStart(13, \"div\", 11)(14, \"label\", 12);\n        i0.ɵɵtext(15, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 11)(18, \"label\", 14);\n        i0.ɵɵtext(19, \"Repetitions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 11)(22, \"label\", 16);\n        i0.ɵɵtext(23, \"Weight\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 11)(26, \"label\", 18);\n        i0.ɵɵtext(27, \"Machine\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"select\", 19)(29, \"option\", 20);\n        i0.ɵɵtext(30, \"Yes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 21);\n        i0.ɵɵtext(32, \"No\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"button\", 22);\n        i0.ɵɵtext(34, \"Create\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.NgControlStatusGroup, i2.NgForm, i3.WeeklyCalendarComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","AppComponent","constructor","exerciseService","fb","exercises","createForm","ngOnInit","getExercises","exerciseForm","group","name","required","repetitions","weight","machine","subscribe","error","console","createExercise","valid","postExercise","value","resp","log","err","deleteExercise","id","updateExercise","exerciseId","exerciseToUpdate","_","i0","ɵɵdirectiveInject","i1","ExerciseService","i2","FormBuilder","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_app_weekly_calendar_squareClicked_1_listener","openExamplePopup","ɵɵelementEnd","ɵɵtext","AppComponent_Template_button_click_8_listener","closeExamplePopup","AppComponent_Template_form_submit_12_listener","$event","ɵɵelement"],"sources":["/Users/rafa/Sites/Proyectos/gym-planning/src/app/app.component.ts","/Users/rafa/Sites/Proyectos/gym-planning/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ExerciseService } from './exercise.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  exercises: any[] = [];\n  exerciseForm: FormGroup;\n\n  constructor(private exerciseService: ExerciseService, private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  ngOnInit(): void {\n    this.getExercises();\n  }\n\n  createForm(): void {\n    this.exerciseForm = this.fb.group({\n      name: ['', Validators.required],\n      repetitions: [0, Validators.required],\n      weight: [0, Validators.required],\n      machine: [false, Validators.required]\n    });\n  }\n\n  getExercises(): void {\n    this.exerciseService.getExercises().subscribe(\n      (exercises) => {\n        this.exercises = exercises;\n      },\n      (error) => {\n        console.error('Error fetching exercises:', error);\n      }\n    );\n  }\n\n  createExercise(): void {\n    if (this.exerciseForm.valid) {\n      this.exerciseService.postExercise(this.exerciseForm.value).subscribe(\n        (resp) => {\n          console.log('Exercise created:', resp);\n          this.getExercises();\n        },\n        (err) => {\n          console.error('Error creating exercise:', err);\n        }\n      );\n    }\n  }\n\n  deleteExercise(id: number): void {\n    this.exerciseService.deleteExercise(id).subscribe(\n      (resp) => {\n        console.log('Exercise deleted:', resp);\n        this.getExercises();\n      },\n      (err) => {\n        console.error('Error deleting exercise:', err);\n      }\n    );\n  }\n\n  updateExercise(): void {\n    const exerciseId = this.exerciseToUpdate.id;\n    this.exerciseService.updateExercise(exerciseId, this.exerciseToUpdate).subscribe(\n      (resp) => {\n        console.log('Exercise updated:', resp);\n        this.getExercises();\n","<div class=\"content\" role=\"main\">\n    <app-weekly-calendar (squareClicked)=\"openExamplePopup()\"></app-weekly-calendar>\n</div>\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"examplePopup\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Create Exercise</h5>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeExamplePopup()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"createExercise($event)\">\n                    <div class=\"form-group\">\n                        <label for=\"exerciseName\">Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exerciseName\" placeholder=\"Exercise Name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseRepetitions\">Repetitions</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseRepetitions\" placeholder=\"Repetitions\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseWeight\">Weight</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exerciseWeight\" placeholder=\"Weight\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exerciseMachine\">Machine</label>\n                        <select class=\"form-control\" id=\"exerciseMachine\">\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                        </select>\n                    </div>\n                    <!-- You might want to add validation, additional fields, or UI elements based on your requirements -->\n                    <button type=\"submit\" class=\"btn btn-primary\">Create</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}